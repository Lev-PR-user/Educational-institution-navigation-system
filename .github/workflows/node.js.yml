name: Node.js CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Copy test environment file
        run: cp .env.test .env

      - name: Wait for PostgreSQL
        run: |
          while ! pg_isready -h localhost -p 5432; do
            echo "Waiting for PostgreSQL..."
            sleep 1
          done

      - name: Run linting
        run: npm run lint

      - name: Run all tests with coverage
        run: npm run test:coverage
        env:
          NODE_ENV: test
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: test
          JWT_SECRET: test-jwt-secret-for-github-actions

      - name: Run specific service tests
        run: |
          npm run test:administration
          npm run test:answers
          npm run test:clubs
          npm run test:contact
          npm run test:faqs
          npm run test:floors
          npm run test:location
          npm run test:question
          npm run test:rooms
          npm run test:teachers
          npm run test:user
        env:
          NODE_ENV: test
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: test
          JWT_SECRET: test-jwt-secret-for-github-actions

      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Swagger documentation
        run: npm run build:swagger

      - name: Build application
        run: npm run build

      - name: Verify production build
        run: |
          cp .env.test .env
          npm start &
          sleep 10
          curl -f http://localhost:3000/health || exit 0
          kill %1

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: navi-college-build
          path: |
            .
            !node_modules
          retention-days: 7

  deploy-check:
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run final production tests
        run: npm run test
        env:
          NODE_ENV: test
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: test
          JWT_SECRET: test-jwt-secret-for-github-actions

      - name: Deployment readiness check
        run: echo "âœ… Application is ready for deployment"